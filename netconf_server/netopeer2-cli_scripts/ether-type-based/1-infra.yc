<!-- olt-side traffic-descriptor-profile -->
<bbf-xpongemtcont:xpongemtcont xmlns:bbf-xpongemtcont="urn:bbf:yang:bbf-xpongemtcont">
  <bbf-xpongemtcont:traffic-descriptor-profiles>
    <bbf-xpongemtcont:traffic-descriptor-profile>
      <bbf-xpongemtcont:name>TDP_IPV4</bbf-xpongemtcont:name>
      <bbf-xpongemtcont:additional-bw-eligibility-indicator>non-assured-sharing</additional-bw-eligibility-indicator>
      <bbf-xpongemtcont:assured-bandwidth>80000000</bbf-xpongemtcont:assured-bandwidth>
      <bbf-xpongemtcont:fixed-bandwidth>0</bbf-xpongemtcont:fixed-bandwidth>
      <bbf-xpongemtcont:maximum-bandwidth>100000000</bbf-xpongemtcont:maximum-bandwidth>
    </bbf-xpongemtcont:traffic-descriptor-profile>
    <bbf-xpongemtcont:traffic-descriptor-profile>
      <bbf-xpongemtcont:name>TDP_PPPOE</bbf-xpongemtcont:name>
      <bbf-xpongemtcont:additional-bw-eligibility-indicator>non-assured-sharing</additional-bw-eligibility-indicator>
      <bbf-xpongemtcont:assured-bandwidth>1000000</bbf-xpongemtcont:assured-bandwidth>
      <bbf-xpongemtcont:fixed-bandwidth>0</bbf-xpongemtcont:fixed-bandwidth>
      <bbf-xpongemtcont:maximum-bandwidth>3000000</bbf-xpongemtcont:maximum-bandwidth>
    </bbf-xpongemtcont:traffic-descriptor-profile>
    <bbf-xpongemtcont:traffic-descriptor-profile>
      <bbf-xpongemtcont:name>TDP_IPV6</bbf-xpongemtcont:name>
      <bbf-xpongemtcont:additional-bw-eligibility-indicator>best-effort-sharing</additional-bw-eligibility-indicator>
      <bbf-xpongemtcont:assured-bandwidth>10000000</bbf-xpongemtcont:assured-bandwidth>
      <bbf-xpongemtcont:fixed-bandwidth>0</bbf-xpongemtcont:fixed-bandwidth>
      <bbf-xpongemtcont:maximum-bandwidth>30000000</bbf-xpongemtcont:maximum-bandwidth>
    </bbf-xpongemtcont:traffic-descriptor-profile>
  </bbf-xpongemtcont:traffic-descriptor-profiles>
</bbf-xpongemtcont:xpongemtcont>

<!-- 2.Configures a DHCP relay-profile with Option 82 tag set to circuit-id. -->
<bbf-l2-d4r:l2-dhcpv4-relay-profiles xmlns:bbf-l2-d4r="urn:bbf:yang:bbf-l2-dhcpv4-relay">
  <bbf-l2-d4r:l2-dhcpv4-relay-profile>
    <bbf-l2-d4r:name>DHCP_Default</bbf-l2-d4r:name>
    <bbf-l2-d4r:max-packet-size>1500</bbf-l2-d4r:max-packet-size>
    <bbf-l2-d4r:option82-format>
      <bbf-l2-d4r:access-loop-suboptions/>
      <bbf-l2-d4r:default-circuit-id-syntax/>
      <bbf-l2-d4r:default-remote-id-syntax>N-VID:N2VID</bbf-l2-d4r:default-remote-id-syntax>
      <bbf-l2-d4r:start-numbering-from-zero>false</bbf-l2-d4r:start-numbering-from-zero>
      <bbf-l2-d4r:use-leading-zeroes>false</bbf-l2-d4r:use-leading-zeroes>
      <bbf-l2-d4r:suboptions>remote-id</bbf-l2-d4r:suboptions>
    </bbf-l2-d4r:option82-format>
  </bbf-l2-d4r:l2-dhcpv4-relay-profile>
</bbf-l2-d4r:l2-dhcpv4-relay-profiles>

<!-- 3.Configures Classifier Entries -->
<bbf-qos-cls:classifiers xmlns:bbf-qos-cls="urn:bbf:yang:bbf-qos-classifiers">

  <bbf-qos-cls:classifier-entry>
    <bbf-qos-cls:name>classifier_eg_data</bbf-qos-cls:name>
    <bbf-qos-cls:filter-operation>bbf-qos-cls:match-all-filter</bbf-qos-cls:filter-operation>
    <bbf-qos-cls:classifier-action-entry-cfg>
      <bbf-qos-cls:action-type>bbf-qos-cls:scheduling-traffic-class</bbf-qos-cls:action-type>
      <bbf-qos-cls:scheduling-traffic-class>0</bbf-qos-cls:scheduling-traffic-class>
    </bbf-qos-cls:classifier-action-entry-cfg>
    <bbf-qos-cls:match-criteria>
      <bbf-qos-cls:any-protocol/>
      <bbf-qos-cls:dscp-range>any</bbf-qos-cls:dscp-range>
      <bbf-qos-cls:match-all/>
    </bbf-qos-cls:match-criteria>
  </bbf-qos-cls:classifier-entry>

  <!-- qos classifier used for IPV4. It is dummy and fixed -->
  <bbf-qos-cls:classifier-entry>
    <bbf-qos-cls:name>classifier_ipv4</bbf-qos-cls:name>
    <bbf-qos-cls:filter-operation>bbf-qos-cls:match-all-filter</bbf-qos-cls:filter-operation>
    <bbf-qos-cls:classifier-action-entry-cfg>
      <bbf-qos-cls:action-type>bbf-qos-cls:scheduling-traffic-class</bbf-qos-cls:action-type>
      <bbf-qos-cls:scheduling-traffic-class>0</bbf-qos-cls:scheduling-traffic-class>
    </bbf-qos-cls:classifier-action-entry-cfg>
  </bbf-qos-cls:classifier-entry>

  <!-- qos classifier used for PPPOE. It is dummy and fixed -->
  <bbf-qos-cls:classifier-entry>
    <bbf-qos-cls:name>classifier_pppoe</bbf-qos-cls:name>
    <bbf-qos-cls:filter-operation>bbf-qos-cls:match-all-filter</bbf-qos-cls:filter-operation>
    <bbf-qos-cls:classifier-action-entry-cfg>
      <bbf-qos-cls:action-type>bbf-qos-cls:scheduling-traffic-class</bbf-qos-cls:action-type>
      <bbf-qos-cls:scheduling-traffic-class>1</bbf-qos-cls:scheduling-traffic-class>
    </bbf-qos-cls:classifier-action-entry-cfg>
  </bbf-qos-cls:classifier-entry>

  <bbf-qos-cls:classifier-entry>
    <bbf-qos-cls:name>classifier_ipv6</bbf-qos-cls:name>
    <bbf-qos-cls:filter-operation>bbf-qos-cls:match-all-filter</bbf-qos-cls:filter-operation>
    <bbf-qos-cls:classifier-action-entry-cfg>
      <bbf-qos-cls:action-type>bbf-qos-cls:scheduling-traffic-class</bbf-qos-cls:action-type>
      <bbf-qos-cls:scheduling-traffic-class>2</bbf-qos-cls:scheduling-traffic-class>
    </bbf-qos-cls:classifier-action-entry-cfg>
  </bbf-qos-cls:classifier-entry>
</bbf-qos-cls:classifiers>

<!-- 4.Configures the QoS polices and profile with classifier mappings.-->
<bbf-qos-pol:policies xmlns:bbf-qos-pol="urn:bbf:yang:bbf-qos-policies">
  <bbf-qos-pol:policy>
    <bbf-qos-pol:name>POLICY_IPV4</bbf-qos-pol:name>
    <bbf-qos-pol:classifiers>
      <bbf-qos-pol:name>classifier_ipv4</bbf-qos-pol:name>
    </bbf-qos-pol:classifiers>
  </bbf-qos-pol:policy>

  <!-- qos policy for PPPOE flow -->
  <bbf-qos-pol:policy>
    <bbf-qos-pol:name>POLICY_PPPOE</bbf-qos-pol:name>
      <bbf-qos-pol:classifiers>
         <bbf-qos-pol:name>classifier_pppoe</bbf-qos-pol:name>
      </bbf-qos-pol:classifiers>
  </bbf-qos-pol:policy>

  <!-- qos policy for IPv6 -->
  <bbf-qos-pol:policy>
    <bbf-qos-pol:name>POLICY_IPV6</bbf-qos-pol:name>
      <bbf-qos-pol:classifiers>
         <bbf-qos-pol:name>classifier_ipv6</bbf-qos-pol:name>
      </bbf-qos-pol:classifiers>
  </bbf-qos-pol:policy>
</bbf-qos-pol:policies>

<bbf-qos-pol:qos-policy-profiles xmlns:bbf-qos-pol="urn:bbf:yang:bbf-qos-policies">
  <!-- qos policy profile for IPv4 flow -->
  <bbf-qos-pol:policy-profile>
    <bbf-qos-pol:name>PP_IPV4</bbf-qos-pol:name>
    <bbf-qos-pol:policy-list>
      <bbf-qos-pol:name>POLICY_IPV4</bbf-qos-pol:name>
    </bbf-qos-pol:policy-list>
  </bbf-qos-pol:policy-profile>

  <!-- qos policy profile for PPPOE flow -->
  <bbf-qos-pol:policy-profile>
    <bbf-qos-pol:name>PP_PPPOE</bbf-qos-pol:name>
    <bbf-qos-pol:policy-list>
      <bbf-qos-pol:name>POLICY_PPPOE</bbf-qos-pol:name>
    </bbf-qos-pol:policy-list>
  </bbf-qos-pol:policy-profile>

  <!-- qos policy profile for ARP flow -->
  <bbf-qos-pol:policy-profile>
    <bbf-qos-pol:name>PP_IPV6</bbf-qos-pol:name>
    <bbf-qos-pol:policy-list>
      <bbf-qos-pol:name>POLICY_IPV6</bbf-qos-pol:name>
    </bbf-qos-pol:policy-list>
  </bbf-qos-pol:policy-profile>
</bbf-qos-pol:qos-policy-profiles>

<hardware xmlns="urn:ietf:params:xml:ns:yang:ietf-hardware">
    <!-- Configure PON Port Physical Entity : ponPortnumber : 1  -->
    <component>
        <name>SFP1</name>
            <parent-rel-pos>1</parent-rel-pos>
            <class xmlns:bbf-hwt="urn:bbf:yang:bbf-hardware-types">bbf-hwt:transceiver</class>
    </component>

    <component>
        <name>PORT1</name>
        <parent>SFP1</parent>
        <parent-rel-pos>1</parent-rel-pos>
        <class xmlns:bbf-hwt="urn:bbf:yang:bbf-hardware-types">bbf-hwt:transceiver-link</class>
    </component>
        <!-- Configure PON Port Physical Entity : ponPortnumber : 2  -->
    <component>
        <name>SFP2</name>
            <parent-rel-pos>1</parent-rel-pos>
            <class xmlns:bbf-hwt="urn:bbf:yang:bbf-hardware-types">bbf-hwt:transceiver</class>
    </component>

    <component>
        <name>PORT2</name>
        <parent>SFP2</parent>
        <parent-rel-pos>2</parent-rel-pos>
        <class xmlns:bbf-hwt="urn:bbf:yang:bbf-hardware-types">bbf-hwt:transceiver-link</class>
    </component>

    <!-- olt-side  uplink hardware -->
    <component>
        <name>uplink_port</name>
        <class xmlns:bbf-hwt="urn:bbf:yang:bbf-hardware-types">bbf-hwt:transceiver-link</class>
    </component>
</hardware>

<interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces">
    <!-- 1. Configure Channel Group Interface : CG_1 -->
    <interface>
        <name>CG_1</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-group</type>
        <enabled>true</enabled>
        <channel-group xmlns="urn:bbf:yang:bbf-xpon">
            <polling-period>100</polling-period>
            <raman-mitigation>raman-none</raman-mitigation>
            <system-id>00000</system-id>
            <pon-pools>
                <pon-pool>
                    <name>pool1</name>
                    <channel-termination-ref>CT_1</channel-termination-ref>
                </pon-pool>
            </pon-pools>
        </channel-group>
    </interface>

    <!-- 2. Configure Channel Partition Interface : CG_1.CPart_1 -->
    <interface>
        <name>CG_1.CPart_1</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-partition</type>
        <enabled>true</enabled>
        <channel-partition xmlns="urn:bbf:yang:bbf-xpon">
            <channel-group-ref>CG_1</channel-group-ref>
            <channel-partition-index>1</channel-partition-index>
            <downstream-fec>true</downstream-fec>
            <multicast-aes-indicator>false</multicast-aes-indicator>
            <authentication-method>serial-number</authentication-method>
            <closest-onu-distance>0</closest-onu-distance>
            <maximum-differential-xpon-distance>20</maximum-differential-xpon-distance>
        </channel-partition>
        <tm-root xmlns="urn:bbf:yang:bbf-qos-traffic-mngt">
            <scheduler-node xmlns="urn:bbf:yang:bbf-qos-enhanced-scheduling">
                <name>NODE_DEF</name>
                <scheduling-level>1</scheduling-level>
                <queue>
                    <local-queue-id>0</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>1</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>2</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>3</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>4</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>5</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>6</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>7</local-queue-id>
                </queue>
            </scheduler-node>
            <child-scheduler-nodes xmlns="urn:bbf:yang:bbf-qos-enhanced-scheduling">
                <name>NODE_DEF</name>
            </child-scheduler-nodes>
        </tm-root>
    </interface>

    <!-- 3. Configure Channel Pair Interface : CG_1.CPart_1.CPair_gpon -->
    <interface>
        <name>CG_1.CPart_1.CPair_gpon</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-pair</type>
        <enabled>true</enabled>
        <channel-pair xmlns="urn:bbf:yang:bbf-xpon">
            <channel-group-ref>CG_1</channel-group-ref>
            <channel-partition-ref>CG_1.CPart_1</channel-partition-ref>
            <channel-pair-type xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:gpon</channel-pair-type>
            <gpon-pon-id-interval>0</gpon-pon-id-interval>
        </channel-pair>
    </interface>

    <!-- 4. Configure Channel Termination Interface : CT_1 -->
    <interface>
        <name>CT_1</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-termination</type>
        <enabled>true</enabled>
        <channel-termination xmlns="urn:bbf:yang:bbf-xpon"  xmlns:bbf-xpon-onu-s="urn:bbf:yang:bbf-xpon-onu-state" xmlns:bbf-xpon-onu-types="urn:bbf:yang:bbf-xpon-onu-types">
            <channel-pair-ref>CG_1.CPart_1.CPair_gpon</channel-pair-ref>
            <channel-termination-type xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:gpon</channel-termination-type>
            <gpon-pon-id>00000000000000</gpon-pon-id>
            <ber-calc-period>10</ber-calc-period>
            <location xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:inside-olt</location>
            <bbf-xpon-onu-s:notifiable-onu-presence-states>bbf-xpon-onu-types:onu-present-and-on-intended-channel-termination</notifiable-onu-presence-states>
            <bbf-xpon-onu-s:notifiable-onu-presence-states>bbf-xpon-onu-types:onu-present-and-v-ani-known-and-o5-failed</notifiable-onu-presence-states>
            <bbf-xpon-onu-s:notifiable-onu-presence-states>bbf-xpon-onu-types:onu-present-and-no-v-ani-known-and-o5-failed-no-onu-id</notifiable-onu-presence-states>
        </channel-termination>
        <port-layer-if xmlns="urn:bbf:yang:bbf-interface-port-reference">PORT1</port-layer-if>
    </interface>
    <!-- 1. Configure Channel Group Interface : CG_2 -->
    <interface>
        <name>CG_2</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-group</type>
        <enabled>true</enabled>
        <channel-group xmlns="urn:bbf:yang:bbf-xpon">
            <polling-period>100</polling-period>
            <raman-mitigation>raman-none</raman-mitigation>
            <system-id>00000</system-id>
            <pon-pools>
                <pon-pool>
                    <name>pool1</name>
                    <channel-termination-ref>CT_2</channel-termination-ref>
                </pon-pool>
            </pon-pools>
        </channel-group>
    </interface>

    <!-- 2. Configure Channel Partition Interface : CG_2.CPart_1 -->
    <interface>
        <name>CG_2.CPart_1</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-partition</type>
        <enabled>true</enabled>
        <channel-partition xmlns="urn:bbf:yang:bbf-xpon">
            <channel-group-ref>CG_2</channel-group-ref>
            <channel-partition-index>1</channel-partition-index>
            <downstream-fec>true</downstream-fec>
            <multicast-aes-indicator>false</multicast-aes-indicator>
            <authentication-method>serial-number</authentication-method>
            <closest-onu-distance>0</closest-onu-distance>
            <maximum-differential-xpon-distance>20</maximum-differential-xpon-distance>
        </channel-partition>
        <tm-root xmlns="urn:bbf:yang:bbf-qos-traffic-mngt">
            <scheduler-node xmlns="urn:bbf:yang:bbf-qos-enhanced-scheduling">
                <name>NODE_DEF</name>
                <scheduling-level>1</scheduling-level>
                <queue>
                    <local-queue-id>0</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>1</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>2</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>3</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>4</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>5</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>6</local-queue-id>
                </queue>
                <queue>
                    <local-queue-id>7</local-queue-id>
                </queue>
            </scheduler-node>
            <child-scheduler-nodes xmlns="urn:bbf:yang:bbf-qos-enhanced-scheduling">
                <name>NODE_DEF</name>
            </child-scheduler-nodes>
        </tm-root>
    </interface>

    <!-- 3. Configure Channel Pair Interface : CG_2.CPart_1.CPair_gpon -->
    <interface>
        <name>CG_2.CPart_1.CPair_gpon</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-pair</type>
        <enabled>true</enabled>
        <channel-pair xmlns="urn:bbf:yang:bbf-xpon">
            <channel-group-ref>CG_2</channel-group-ref>
            <channel-partition-ref>CG_2.CPart_1</channel-partition-ref>
            <channel-pair-type xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:gpon</channel-pair-type>
            <gpon-pon-id-interval>0</gpon-pon-id-interval>
        </channel-pair>
    </interface>

    <!-- 4. Configure Channel Termination Interface : CT_2 -->
    <interface>
        <name>CT_2</name>
        <type xmlns:bbf-xponift="urn:bbf:yang:bbf-xpon-if-type">bbf-xponift:channel-termination</type>
        <enabled>true</enabled>
        <channel-termination xmlns="urn:bbf:yang:bbf-xpon">
            <channel-pair-ref>CG_2.CPart_1.CPair_gpon</channel-pair-ref>
            <channel-termination-type xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:gpon</channel-termination-type>
            <gpon-pon-id>00000000000000</gpon-pon-id>
            <ber-calc-period>10</ber-calc-period>
            <location xmlns:bbf-xpon-types="urn:bbf:yang:bbf-xpon-types">bbf-xpon-types:inside-olt</location>
        </channel-termination>
        <port-layer-if xmlns="urn:bbf:yang:bbf-interface-port-reference">PORT2</port-layer-if>
    </interface>

    <!-- olt-side  uplink interface -->
    <interface>
        <name>uplink_port_intf</name>
        <enabled>true</enabled>
        <type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type>
        <port-layer-if xmlns="urn:bbf:yang:bbf-interface-port-reference">uplink_port</port-layer-if>
    </interface>
</interfaces>
