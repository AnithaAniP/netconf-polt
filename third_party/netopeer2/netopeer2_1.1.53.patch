diff -Naur netopeer2-1.1.53.org/CMakeLists.txt netopeer2-1.1.53/CMakeLists.txt
--- netopeer2-1.1.53.org/CMakeLists.txt	2021-02-16 11:02:02.169080689 +1100
+++ netopeer2-1.1.53/CMakeLists.txt	2021-02-16 11:14:52.416626549 +1100
@@ -233,6 +233,7 @@
         set(ENV{NP2_MODULE_PERMS} \"${MODULES_PERMS}\")
         set(ENV{NP2_MODULE_OWNER} \"${MODULES_OWNER}\")
         set(ENV{NP2_MODULE_GROUP} \"${MODULES_GROUP}\")
+        set(ENV{SYSREPOCTL_EXECUTABLE} \"${SYSREPOCTL}\")
         execute_process(COMMAND \"${SCRIPT_DIR}/setup.sh\" RESULT_VARIABLE SETUP_RES)
         if(NOT SETUP_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/setup.sh failed: \${SETUP_RES}\")
@@ -244,6 +245,8 @@
 if(GENERATE_HOSTKEY)
     install(CODE "
         message(STATUS \"Generating a new RSA host key \\\"genkey\\\" if not already added...\")
+        set(ENV{OPENSSL_EXECUTABLE} \"${OPENSSL}\")
+        set(ENV{SYSREPOCFG_EXECUTABLE} \"${SYSREPOCFG}\")
         execute_process(COMMAND ${SCRIPT_DIR}/merge_hostkey.sh RESULT_VARIABLE MERGE_HOSTKEY_RES)
         if(NOT MERGE_HOSTKEY_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/merge_hostkey.sh failed: \${MERGE_HOSTKEY_RES}\")
@@ -253,6 +256,7 @@
 if(MERGE_LISTEN_CONFIG)
     install(CODE "
         message(STATUS \"Merging default server listen configuration if there is none...\")
+        set(ENV{SYSREPOCFG_EXECUTABLE} \"${SYSREPOCFG}\")
         execute_process(COMMAND ${SCRIPT_DIR}/merge_config.sh RESULT_VARIABLE MERGE_CONFIG_RES)
         if(NOT MERGE_CONFIG_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/merge_config.sh failed: \${MERGE_CONFIG_RES}\")
diff -Naur netopeer2-1.1.53.org/scripts/merge_hostkey.sh netopeer2-1.1.53/scripts/merge_hostkey.sh
--- netopeer2-1.1.53.org/scripts/merge_hostkey.sh	2021-01-28 20:03:01.000000000 +1100
+++ netopeer2-1.1.53/scripts/merge_hostkey.sh	2021-02-16 11:14:33.492540936 +1100
@@ -13,7 +13,9 @@
 fi

 # avoid problems with sudo PATH
-if [ `id -u` -eq 0 ]; then
+if [ -n "$OPENSSL_EXECUTABLE" ]; then
+    OPENSSL="$OPENSSL_EXECUTABLE"
+elif [ `id -u` -eq 0 ]; then
     OPENSSL=`su -c 'which openssl' -l $USER`
 else
     OPENSSL=`which openssl`
