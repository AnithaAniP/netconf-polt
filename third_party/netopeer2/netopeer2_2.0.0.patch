diff -Naur netopeer2-2.0.0.org/CMakeLists.txt netopeer2-2.0.0/CMakeLists.txt
--- netopeer2-2.0.0.org/CMakeLists.txt	2021-05-28 00:05:24.000000000 +1000
+++ netopeer2-2.0.0/CMakeLists.txt	2021-06-16 09:52:50.284138563 +1000
@@ -273,6 +273,7 @@
         set(ENV{NP2_MODULE_PERMS} \"${MODULES_PERMS}\")
         set(ENV{NP2_MODULE_OWNER} \"${MODULES_OWNER}\")
         set(ENV{NP2_MODULE_GROUP} \"${MODULES_GROUP}\")
+        set(ENV{SYSREPOCTL_EXECUTABLE} \"${SYSREPOCTL}\")
         execute_process(COMMAND \"${SCRIPT_DIR}/setup.sh\" RESULT_VARIABLE SETUP_RES)
         if(NOT SETUP_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/setup.sh failed: \${SETUP_RES}\")
@@ -284,6 +285,8 @@
 if(GENERATE_HOSTKEY)
     install(CODE "
         message(STATUS \"Generating a new RSA host key \\\"genkey\\\" if not already added...\")
+        set(ENV{OPENSSL_EXECUTABLE} \"${OPENSSL}\")
+        set(ENV{SYSREPOCFG_EXECUTABLE} \"${SYSREPOCFG}\")
         execute_process(COMMAND ${SCRIPT_DIR}/merge_hostkey.sh RESULT_VARIABLE MERGE_HOSTKEY_RES)
         if(NOT MERGE_HOSTKEY_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/merge_hostkey.sh failed: \${MERGE_HOSTKEY_RES}\")
@@ -293,6 +296,7 @@
 if(MERGE_LISTEN_CONFIG)
     install(CODE "
         message(STATUS \"Merging default server listen configuration if there is none...\")
+        set(ENV{SYSREPOCFG_EXECUTABLE} \"${SYSREPOCFG}\")
         execute_process(COMMAND ${SCRIPT_DIR}/merge_config.sh RESULT_VARIABLE MERGE_CONFIG_RES)
         if(NOT MERGE_CONFIG_RES EQUAL \"0\")
             message(FATAL_ERROR \" scripts/merge_config.sh failed: \${MERGE_CONFIG_RES}\")
diff -Naur netopeer2-2.0.0.org/scripts/merge_hostkey.sh netopeer2-2.0.0/scripts/merge_hostkey.sh
--- netopeer2-2.0.0.org/scripts/merge_hostkey.sh	2021-05-28 00:05:24.000000000 +1000
+++ netopeer2-2.0.0/scripts/merge_hostkey.sh	2021-06-16 09:53:36.841515329 +1000
@@ -13,7 +13,9 @@
 fi
 
 # avoid problems with sudo PATH
-if [ `id -u` -eq 0 ]; then
+if [ -n "$OPENSSL_EXECUTABLE" ]; then
+    OPENSSL="$OPENSSL_EXECUTABLE"
+elif [ `id -u` -eq 0 ]; then
     OPENSSL=`su -c 'which openssl' -l $USER`
 else
     OPENSSL=`which openssl`
